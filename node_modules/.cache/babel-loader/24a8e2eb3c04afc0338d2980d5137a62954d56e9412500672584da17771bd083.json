{"ast":null,"code":"var _jsxFileName = \"D:\\\\assignment\\\\zoroz\\\\frontend\\\\src\\\\pages\\\\otp-input.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react/prop-types */\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpInput = ({\n  length = 4,\n  onOtpSubmit = () => {}\n}) => {\n  _s();\n  const [otp, setOtp] = useState(new Array(length).fill(\"\"));\n  const inputRefs = useRef([]);\n  useEffect(() => {\n    if (inputRefs.current[0]) {\n      inputRefs.current[0].focus();\n    }\n  }, []);\n  const handleChange = (index, e) => {\n    const value = e.target.value;\n    if (isNaN(value)) return;\n    const newOtp = [...otp];\n    // allow only one input\n    newOtp[index] = value.substring(value.length - 1);\n    setOtp(newOtp);\n\n    // submit trigger\n    const combinedOtp = newOtp.join(\"\");\n    if (combinedOtp.length === length) onOtpSubmit(combinedOtp);\n\n    // Move to next input if current field is filled\n    if (value && index < length - 1 && inputRefs.current[index + 1]) {\n      inputRefs.current[index + 1].focus();\n    }\n  };\n  const handleClick = index => {\n    inputRefs.current[index].setSelectionRange(1, 1);\n\n    // optional\n    if (index > 0 && !otp[index - 1]) {\n      inputRefs.current[otp.indexOf(\"\")].focus();\n    }\n  };\n  const handleKeyDown = (index, e) => {\n    if (e.key === \"Backspace\" && !otp[index] && index > 0 && inputRefs.current[index - 1]) {\n      // Move focus to the previous input field on backspace\n      inputRefs.current[index - 1].focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: otp.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: input => inputRefs.current[index] = input,\n        value: value,\n        onChange: e => handleChange(index, e),\n        onClick: () => handleClick(index),\n        onKeyDown: e => handleKeyDown(index, e),\n        className: \"otpInput\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpInput, \"eniRdfHUru6Kur4kt9m1ypvDJxE=\");\n_c = OtpInput;\nexport default OtpInput;\nvar _c;\n$RefreshReg$(_c, \"OtpInput\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","OtpInput","length","onOtpSubmit","_s","otp","setOtp","Array","fill","inputRefs","current","focus","handleChange","index","e","value","target","isNaN","newOtp","substring","combinedOtp","join","handleClick","setSelectionRange","indexOf","handleKeyDown","key","children","map","type","ref","input","onChange","onClick","onKeyDown","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/assignment/zoroz/frontend/src/pages/otp-input.js"],"sourcesContent":["/* eslint-disable react/prop-types */\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nconst OtpInput = ({ length = 4, onOtpSubmit = () => {} }) => {\r\n  const [otp, setOtp] = useState(new Array(length).fill(\"\"));\r\n  const inputRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (inputRefs.current[0]) {\r\n      inputRefs.current[0].focus();\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (index, e) => {\r\n    const value = e.target.value;\r\n    if (isNaN(value)) return;\r\n\r\n    const newOtp = [...otp];\r\n    // allow only one input\r\n    newOtp[index] = value.substring(value.length - 1);\r\n    setOtp(newOtp);\r\n\r\n    // submit trigger\r\n    const combinedOtp = newOtp.join(\"\");\r\n    if (combinedOtp.length === length) onOtpSubmit(combinedOtp);\r\n\r\n    // Move to next input if current field is filled\r\n    if (value && index < length - 1 && inputRefs.current[index + 1]) {\r\n      inputRefs.current[index + 1].focus();\r\n    }\r\n  };\r\n\r\n  const handleClick = (index) => {\r\n    inputRefs.current[index].setSelectionRange(1, 1);\r\n\r\n    // optional\r\n    if (index > 0 && !otp[index - 1]) {\r\n      inputRefs.current[otp.indexOf(\"\")].focus();\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (index, e) => {\r\n    if (\r\n      e.key === \"Backspace\" &&\r\n      !otp[index] &&\r\n      index > 0 &&\r\n      inputRefs.current[index - 1]\r\n    ) {\r\n      // Move focus to the previous input field on backspace\r\n      inputRefs.current[index - 1].focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {otp.map((value, index) => {\r\n        return (\r\n          <input\r\n            key={index}\r\n            type=\"text\"\r\n            ref={(input) => (inputRefs.current[index] = input)}\r\n            value={value}\r\n            onChange={(e) => handleChange(index, e)}\r\n            onClick={() => handleClick(index)}\r\n            onKeyDown={(e) => handleKeyDown(index, e)}\r\n            className=\"otpInput\"\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}